# NOTE: Generated By HttpRunner v4.3.5
# FROM: other\get_Factory_product.yml
from httprunner import HttpRunner, Config, Step, RunRequest


class TestCaseGetFactoryProduct(HttpRunner):

    config = Config("获取工厂App内的产品信息").export(*["factory_bluetoothName", "factory_sn"])

    teststeps = [
        Step(
            RunRequest("获取产品信息总数")
            .get("${ENV(factory_url)}/product/page")
            .with_params(**{"brand": "LT", "status": 1, "page": 1, "pageSize": 10000})
            .extract()
            .with_jmespath("body.data.total", "total")
            .validate()
            .assert_equal("body.code", 200)
            .assert_equal("body.message", "success")
        ),
        Step(
            RunRequest("获取随机产品信息")
            .with_variables(**{"num": "${randomChoice($total)}"})
            .get("${ENV(factory_url)}/product/page")
            .with_params(**{"brand": "LT", "status": 1, "page": 1, "pageSize": 10000})
            .extract()
            .with_jmespath(
                "body.data.records[$num].bluetoothName", "factory_bluetoothName"
            )
            .with_jmespath("body.data.records[$num].sn", "factory_sn")
            .validate()
            .assert_equal("body.code", 200)
            .assert_equal("body.message", "success")
        ),
    ]


if __name__ == "__main__":
    TestCaseGetFactoryProduct().test_start()

# NOTE: Generated By HttpRunner v4.3.5
# FROM: api\userInfo.yml
from httprunner import HttpRunner, Config, Step, RunRequest
from httprunner import RunTestCase

import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent))

from comm.get_token_test import TestCaseGetToken as GetToken


class TestCaseUserinfo(HttpRunner):

    config = Config("用户信息接口校验").variables(**{"random_language": "${randomLge()}"})

    teststeps = [
        Step(RunTestCase("获取token").call(GetToken).export(*["token"])),
        Step(
            RunRequest("用户信息更新")
            .post("${ENV(base_url)}/user/update")
            .with_headers(
                **{
                    "Authorization": "Bearer $token",
                    "platform": "${ENV(platform)}",
                    "version": "${ENV(version)}",
                }
            )
            .with_json(
                {
                    "name": "Auto_test",
                    "avatarLink": "${ENV(img_url)}",
                    "language": "$random_language",
                }
            )
            .validate()
            .assert_equal("body.code", 200)
            .assert_equal("body.message", "success")
        ),
        Step(
            RunRequest("查询用户信息")
            .with_variables(**{"avatarLink": "${ENV(img_url)}"})
            .get("${ENV(base_url)}/user/get")
            .with_headers(
                **{
                    "Authorization": "Bearer $token",
                    "platform": "${ENV(platform)}",
                    "version": "${ENV(version)}",
                }
            )
            .validate()
            .assert_equal("body.code", 200)
            .assert_equal("body.message", "success")
            .assert_equal("body.data.language", "$random_language")
            .assert_equal("body.data.avatarLink", "$avatarLink")
        ),
    ]


if __name__ == "__main__":
    TestCaseUserinfo().test_start()

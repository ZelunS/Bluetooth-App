# NOTE: Generated By HttpRunner v4.3.5
# FROM: api\get_productInfo.yml
from httprunner import HttpRunner, Config, Step, RunRequest
from httprunner import RunTestCase

import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent))

from comm.get_token_test import TestCaseGetToken as GetToken
from other.get_Factory_product_test import (
    TestCaseGetFactoryProduct as GetFactoryProduct,
)


class TestCaseGetProductinfo(HttpRunner):

    config = Config("根据蓝牙名称查询产品详情")

    teststeps = [
        Step(RunTestCase("获取token").call(GetToken).export(*["token"])),
        Step(
            RunTestCase("获取工厂App内产品信息")
            .call(GetFactoryProduct)
            .export(*["factory_bluetoothName", "factory_sn"])
        ),
        Step(
            RunRequest("根据蓝牙名称查询产品详情-成功")
            .get("${ENV(base_url)}/product/$factory_bluetoothName")
            .with_headers(
                **{
                    "Authorization": "Bearer $token",
                    "platform": "${ENV(platform)}",
                    "version": "${ENV(version)}",
                }
            )
            .validate()
            .assert_equal("body.code", 200)
            .assert_equal("body.message", "success")
            .assert_equal("body.data.bluetoothName", "$factory_bluetoothName")
            .assert_equal("body.data.sn", "$factory_sn")
        ),
    ]


if __name__ == "__main__":
    TestCaseGetProductinfo().test_start()

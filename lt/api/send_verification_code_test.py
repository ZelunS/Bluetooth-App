# NOTE: Generated By HttpRunner v4.3.5
# FROM: api\send_verification_code.yml
from httprunner import HttpRunner, Config, Step, RunRequest


class TestCaseSendVerificationCode(HttpRunner):

    config = Config("发送验证码Api校验").export(*["version"])

    teststeps = [
        Step(
            RunRequest("正常发送注册验证码")
            .post("${ENV(base_url)}/auth/send-verification-code")
            .with_headers(
                **{"version": "${ENV(version)}", "platform": "${ENV(platform)}"}
            )
            .with_json({"email": "20120@qq.com", "type": 1})
            .validate()
            .assert_equal("body.code", 200)
            .assert_equal("body.message", "success")
        ),
        Step(
            RunRequest("发送注册验证码时不输入邮箱")
            .post("${ENV(base_url)}/auth/send-verification-code")
            .with_headers(
                **{"version": "${ENV(version)}", "platform": "${ENV(platform)}"}
            )
            .with_json({"type": 1})
            .validate()
            .assert_equal("body.code", 500)
            .assert_equal("body.message", "Email can not be null")
        ),
        Step(
            RunRequest("使用已注册的邮箱发送注册验证码")
            .post("${ENV(base_url)}/auth/send-verification-code")
            .with_headers(
                **{"version": "${ENV(version)}", "platform": "${ENV(platform)}"}
            )
            .with_json({"email": "zelun.su@amperetime.com", "type": 1})
            .validate()
            .assert_equal("body.code", 10051404)
            .assert_equal("body.message", "The email is repeated")
        ),
        Step(
            RunRequest("正常发送找回密码验证码")
            .post("${ENV(base_url)}/auth/send-verification-code")
            .with_headers(
                **{"version": "${ENV(version)}", "platform": "${ENV(platform)}"}
            )
            .with_json({"email": "zelun.su@amperetime.com", "type": 2})
            .validate()
            .assert_equal("body.code", 200)
            .assert_equal("body.message", "success")
        ),
        Step(
            RunRequest("发送找回密码验证码时不输入邮箱")
            .post("${ENV(base_url)}/auth/send-verification-code")
            .with_headers(
                **{"version": "${ENV(version)}", "platform": "${ENV(platform)}"}
            )
            .with_json({"type": 2})
            .validate()
            .assert_equal("body.code", 500)
            .assert_equal("body.message", "Email can not be null")
        ),
        Step(
            RunRequest("使用未注册的邮箱发送找回密码验证码")
            .post("${ENV(base_url)}/auth/send-verification-code")
            .with_headers(
                **{"version": "${ENV(version)}", "platform": "${ENV(platform)}"}
            )
            .with_json({"email": "222221@amperetime.com", "type": 2})
            .validate()
            .assert_equal("body.code", 10051409)
            .assert_equal("body.message", "The email does not exist")
        ),
    ]


if __name__ == "__main__":
    TestCaseSendVerificationCode().test_start()
